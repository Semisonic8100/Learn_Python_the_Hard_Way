Learning to Speak Object Oriented
================================================

class - Tell Python to make a new kind of thing.
object - Two meanings: The most basic kind of thing, and any instance of some thing.
instance - What you get when you tell python to create a Class.
def - How you define a function inside a class.
self - inside the functions in a class, self is a variable for the instance/object being accessed.
inheritance - The concept that one class can inherit traits from another class.
composition - The concept that a class can be composed of other classes as parts.
attribute - A property classes have that are from composition and are usually variables.
is-a - A phrase to say that something inherits from another.  As in "salmon" is-a "fish".
has-a - A phrase to say that something is composed of other things or has a trait, as in "a salmon" has-a "mouth".


Phrase Drills
================================================
Next I have a list of Python code snippets on the left and the English sentences for them:

class X(Y) “Make a class named X that is- a Y.”
class X(object): def __init__(self, J) “class X has- a __init__ that takes self and J parameters."
class X(object): def M(self, J) “class X has- a function named M that takes self and J parameters.”
foo = X() “Set foo to an instance of class X.”
foo.M(J) “From foo get the M function, and call it with parameters self, J.”
foo.K = Q “From foo get the K attribute, and set it to Q.”
